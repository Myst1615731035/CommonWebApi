<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>
<# var manager = new Manager(Host, GenerationEnvironment, true); #>


<# 
	var OutputPath =Path.GetDirectoryName(Path.GetDirectoryName(Path.GetDirectoryName(Host.TemplateFile+"..")+"..")+"..");
	OutputPath=Path.Combine(OutputPath,"Common.Repository","IRepositories");
	if (!Directory.Exists(OutputPath))
	{
	    Directory.CreateDirectory(OutputPath);
	}
#>
<# 
	 
    foreach (var item in DbHelper.GetDbTablesNew(config.ConnectionString, config.DbDatabase,config.TableName))
    {
		string tableName = item.ToString();
		manager.StartBlock("I"+tableName+"Repository"+".cs",OutputPath);//文件名
#>
using Common.Model.Entities;
using Common.Repository;

namespace Common.IRepository
{	
	/// <summary>
	/// I<#=tableName#>Repository
	/// </summary>	
	public partial interface I<#=tableName#>Repository : IBaseRepository<<#=tableName#>>//类名
    {
    }
}
	<# 
		manager.EndBlock(); 
	} 
	manager.Process(true);
#> 

	



